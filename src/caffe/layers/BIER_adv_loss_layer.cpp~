//iccv17 BIER adv Loss 配合 inner_product layer 中的 bier_init 使用
#include <algorithm>

#include "stdio.h"
#include "caffe/layers/BIER_adv_loss_layer.hpp"
#include "caffe/util/io.hpp"
#include "caffe/util/math_functions.hpp"
#include <cmath>
/**********************/
/**/
namespace caffe {

template <typename Dtype>
void BIERAdvLossLayer<Dtype>::LayerSetUp(
  const vector<Blob<Dtype>*>& bottom, const vector<Blob<Dtype>*>& top) {
  LossLayer<Dtype>::LayerSetUp(bottom, top);
  CHECK_EQ(bottom[0]->count(), bottom[1]->count());
  temp_.ReshapeLike(*bottom[0]);
}
template <typename Dtype>
void BIERAdvLossLayer<Dtype>::Forward_cpu(
    const vector<Blob<Dtype>*>& bottom,
    const vector<Blob<Dtype>*>& top) {
    int num = bottom[0]->num();
    int channels = bottom[0]->channels();
    top[0]->mutable_cpu_data()[0]=Dtype(0.);
    const Dtype* feai = bottom[0]->cpu_data();
    const Dtype* feaj = bottom[1]->cpu_data();
    Dtype* temp = temp_.mutable_cpu_data();
    
    Dtype loss = 0.;
    //fi .* fj
    caffe_mul(num*channels, feai, feaj, temp);
    // sum(fi .* fj)^2
    loss = caffe_cpu_dot(num*channels, temp, temp);
    top[0]->mutable_cpu_data()[0] = -1.0*loss/num/channels;
}

     

template <typename Dtype>
void BIERAdvLossLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,
	const vector<bool>& propagate_down, const vector<Blob<Dtype>*>& bottom) 
{       
        caffe_mul(bottom[0]->count(), temp_.cpu_data(), bottom[1]->cpu_data(), bottom[0]->mutable_cpu_diff());
        caffe_cpu_scale(bottom[0]->count(), Dtype(2)*top[0]->cpu_diff()[0]/bottom[0]->count(), bottom[0]->cpu_diff(), bottom[0]->mutable_cpu_diff());
        caffe_mul(bottom[0]->count(), temp_.cpu_data(), bottom[0]->cpu_data(), bottom[1]->mutable_cpu_diff());
        caffe_cpu_scale(bottom[0]->count(), Dtype(2)*top[0]->cpu_diff()[0]/bottom[0]->count(), bottom[1]->cpu_diff(), bottom[1]->mutable_cpu_diff()); 
}




#ifdef CPU_ONLY
STUB_GPU(BIERAdvLossLayer);
#endif

INSTANTIATE_CLASS(BIERAdvLossLayer);
REGISTER_LAYER_CLASS(BIERAdvLoss);

}  // namespace caffe
